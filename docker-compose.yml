services:
  db:
    image: postgres:16-alpine
    container_name: microeventos-db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5435:5432"                # host 5435 -> container 5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 3s
      retries: 10

  api:
    build: ./api
    container_name: microeventos-api
    environment:
      DB_HOST: db
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: "5432"
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"

  migrator:
    image: postgres:16-alpine
    depends_on:
      db:
        condition: service_healthy
    environment:
      PGPASSWORD: ${DB_PASSWORD}
    volumes:
      - ./db/init:/init           # aquÃ­ pones tus .sql (001_schema.sql, etc.)
    command: >
      sh -c "for f in /init/*.sql; do
               echo Applying $$f;
               psql -h db -U ${DB_USER} -d ${DB_NAME} -f $$f;
             done"

volumes:
  pgdata: {}
